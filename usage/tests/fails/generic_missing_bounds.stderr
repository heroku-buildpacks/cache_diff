error[E0369]: binary operation `!=` cannot be applied to type `T`
 --> tests/fails/generic_missing_bounds.rs:3:10
  |
3 | #[derive(CacheDiff)]
  |          ^^^^^^^^^
  |
  = note: this error originates in the derive macro `CacheDiff` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T` with trait `PartialEq`
  |
4 | struct Example<T: std::cmp::PartialEq> {
  |                 +++++++++++++++++++++

error[E0277]: `T` doesn't implement `std::fmt::Display`
 --> tests/fails/generic_missing_bounds.rs:3:10
  |
3 | #[derive(CacheDiff)]
  |          ^^^^^^^^^ `T` cannot be formatted with the default formatter
  |
  = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
  = note: required for `&T` to implement `std::fmt::Display`
note: required by a bound in `fmt_value`
 --> $WORKSPACE/cache_diff/src/lib.rs
  |
  |     fn fmt_value<T: std::fmt::Display>(&self, value: &T) -> String {
  |                     ^^^^^^^^^^^^^^^^^ required by this bound in `CacheDiff::fmt_value`
  = note: this error originates in the derive macro `CacheDiff` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider restricting type parameter `T` with trait `Display`
  |
4 | struct Example<T: std::fmt::Display> {
  |                 +++++++++++++++++++
